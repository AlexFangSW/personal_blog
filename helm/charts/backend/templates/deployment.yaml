apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-backend
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Values.global.appName }}
    releaseName: {{ .Release.Name }}
    version: {{ .Values.deployment.version }}
spec:
  replicas: {{default 1 .Values.deployment.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.global.appName }}
      releaseName: {{ .Release.Name }}
      blogComponent: {{ .Values.deployment.podLabels.blogComponent }}
  {{- if .Values.deployment.strategy }}
  strategy:
  {{- toYaml .Values.deployment.strategy | nindent 4 }}
  {{- end }}
  template:
    metadata:
      annotations:
        podRoll: {{ randAlphaNum 5 | quote }}
      {{- if .Values.deployment.podAnnotations }}
        {{- range $k, $v := .Values.deployment.podAnnotations }}
        {{ $k }}: {{ $v | quote }}
        {{- end }}
      {{- end }}
      {{- $baseLabels := dict "app" .Values.global.appName  "releaseName" .Release.Name "version" .Values.deployment.version }}
      {{- $mergedLabels := merge $baseLabels .Values.deployment.podLabels }}
      labels:
        {{- range $k, $v := $mergedLabels }}
        {{ $k }}: {{ $v | quote }}
        {{- end}}
    spec:
      {{- if .Values.deployment.affinity }}
      affinity:
      {{-  toYaml .Values.deployment.affinity | nindent 8 }}
      {{- end }}
      {{- if .Values.deployment.nodeSelector }}
      nodeSelector:
      {{- toYaml .Values.deployment.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.deployment.tolerations }}
      tolerations:
      {{- toYaml .Values.deployment.tolerations | nindent 6 }}
      {{- end }}
      containers:
      - name: backend
        image: {{ .Values.deployment.image }}
        imagePullPolicy: Always
        {{- if .Values.deployment.resources }}
        resources:
        {{- toYaml .Values.deployment.resources | nindent  10 }}
        {{- end}}
        {{- if .Values.deployment.livenessProbe }}
        livenessProbe:
        {{- toYaml .Values.deployment.livenessProbe | nindent  10 }}
        {{- end }}
        {{- if .Values.deployment.readinessProbe }}
        readinessProbe:
        {{- toYaml .Values.deployment.readinessProbe | nindent 10 }}
        {{- end }}
        command:
          - server
          - --config 
          - /app/config.json
          {{- if .Values.runDBMigration }}
          - --migrate
          {{- end }}
        volumeMounts:
        - mountPath: /app/config.json
          name: config
          subPath: config.json
        - mountPath: /data
          name: db
        env:
        {{- if .Values.env }}
        {{- range $k, $v := .Values.env }}
        - name: {{ $k }}
          value:  {{ $v | quote }}
        {{- end }}
        {{- end }}
      imagePullSecrets:
      - name: {{ .Values.deployment.pullsecret }}
      volumes:
      - configMap:
          defaultMode: 420
          name: {{ .Release.Name }}-backend-config
        name: config
      - name: db
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-backend
